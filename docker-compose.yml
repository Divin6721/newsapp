version: "3.8"

networks:
  app-network:
    driver: bridge
services:
  postgres:
    networks:
      - app-network
    image: postgres:15-alpine        # легче
    container_name: postgres_newsapp
    restart: unless-stopped          # автоподъём
    environment:
      POSTGRES_DB: newsapp_db
      POSTGRES_USER: springuser
      POSTGRES_PASSWORD: 123654
      TZ: Europe/Moscow
    healthcheck:                     # готовность БД
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    networks:
      - app-network
    image: redis:7-alpine
    container_name: redis-container
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]   # persistance
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  app:
    networks:
      - app-network
    build: .
    container_name: newsapp
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8080:8087"                  # host:container
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/newsapp_db
      SPRING_DATASOURCE_USERNAME: springuser
      SPRING_DATASOURCE_PASSWORD: 123654
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SPRING_MESSAGES_ENCODING: UTF-8

volumes:
  pgdata:
  redisdata:


